{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"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","sourcesContent":["import { WebPlugin } from '@capacitor/core';\r\nimport mixpanel from 'mixpanel-browser';\r\n\r\nimport type { MixpanelPlugin } from './definitions';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    mixpanel: any;\r\n  }\r\n}\r\n\r\nexport class MixpanelWeb extends WebPlugin implements MixpanelPlugin {\r\n  private superProperties = {};\r\n\r\n  constructor() {\r\n    super();\r\n    window.mixpanel = mixpanel;\r\n  }\r\n\r\n  async initialize(options: {\r\n    token: string;\r\n    autotrack?: boolean;\r\n    optOutByDefault?: boolean;\r\n    debug?: boolean;\r\n    ipCollection?: boolean;\r\n  }): Promise<void> {\r\n    mixpanel.init(options.token, {\r\n      autotrack: options.autotrack ?? true,\r\n      opt_out_tracking_by_default: options.optOutByDefault ?? false,\r\n      debug: options.debug ?? false,\r\n      ip: options.ipCollection ?? true,\r\n    });\r\n    return Promise.resolve();\r\n  }\r\n\r\n  async distinctId(): Promise<{ value: string }> {\r\n    return Promise.resolve({ value: mixpanel.get_distinct_id() });\r\n  }\r\n\r\n  async track(options: { event: string; properties: any }): Promise<void> {\r\n    mixpanel.track(options.event, options.properties);\r\n    return Promise.resolve();\r\n  }\r\n\r\n  async identify(options: { distinctId: string }): Promise<void> {\r\n    mixpanel.identify(options.distinctId);\r\n    return Promise.resolve();\r\n  }\r\n\r\n  async alias(options: { alias: string; distinctId: string }): Promise<void> {\r\n    mixpanel.alias(options.alias, options.distinctId);\r\n    return Promise.resolve();\r\n  }\r\n\r\n  async reset(): Promise<void> {\r\n    mixpanel.reset();\r\n    return Promise.resolve();\r\n  }\r\n\r\n  async clearSuperProperties(): Promise<void> {\r\n    for (const k of Object.keys(this.superProperties)) {\r\n      mixpanel.unregister(k);\r\n    }\r\n    this.superProperties = {};\r\n    return Promise.resolve();\r\n  }\r\n\r\n  async currentSuperProperties(): Promise<{ properties: any }> {\r\n    return Promise.resolve({\r\n      properties: this.superProperties,\r\n    });\r\n  }\r\n\r\n  async registerSuperProperties(options: { properties: any }): Promise<void> {\r\n    mixpanel.register(options.properties);\r\n    return Promise.resolve();\r\n  }\r\n\r\n  async setProfile(options: { properties: any }): Promise<void> {\r\n    mixpanel.people.set(options.properties);\r\n    return Promise.resolve();\r\n  }\r\n\r\n  async setProfileUnion(options: { properties: any }): Promise<void> {\r\n    mixpanel.people.union(options.properties);\r\n    return Promise.resolve();\r\n  }\r\n\r\n  async deleteProfile(): Promise<void> {\r\n    mixpanel.people.delete_user();\r\n  }\r\n\r\n  async trackCharge(options: { amount: number; properties: any }): Promise<void> {\r\n    mixpanel.people.track_charge(options.amount, options.properties);\r\n  }\r\n\r\n  async flush(): Promise<void> {\r\n    // NOT IMPLEMENTED FOR WEB\r\n  }\r\n\r\n  async optInTracking(options: { distinctId?: string; properties?: any }): Promise<void> {\r\n    mixpanel.opt_in_tracking(options.properties);\r\n  }\r\n\r\n  async optOutTracking(): Promise<void> {\r\n    mixpanel.opt_out_tracking();\r\n  }\r\n\r\n  async hasOptedOutTracking(): Promise<{ value: boolean }> {\r\n    return { value: mixpanel.has_opted_out_tracking() };\r\n  }\r\n}\r\n"]}